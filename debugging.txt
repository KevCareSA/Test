Task 3: path

Handle path
Don't fork if path does not exit .. use stat
form

prototype of stat:  int stat(const char *pathname, struct stat *statbuf);


//////////////////////////////////////////////////////////////


char *find_path(char *cmd)
{
	struct stat statbuffer;
	char *token, *pathdir = NULL, *env_path = NULL, *env_path_cp = NULL; 

	if (stat(cmd, &statbuffer) == 0)
		return(cmd);

	env_path = _getenv("PATH");

	if (env_path != NULL)
	{
		env_path_cp = strdup(env_path);

		if (env_path_cp == NULL)
			return (NULL);
		token = strtok(env_path_cp, ":");
		while (token != NULL)
		{
			pathdir = malloc(_strlen(cmd) + _strlen(token) + 2);
			str_cpy(pathdir, token);
			strcat(pathdir, "/");
			strcat(pathdir, cmd);
			strcat(pathdir, "\0");
			if (stat(pathdir, &statbuffer) == 0)
			{
				free(env_path_cp);

				return (pathdir);
			}
			else
			{
				free(pathdir);
				token = strtok(NULL, ":");
			}
		}
		free(env_path_cp);
		if (pathdir != NULL)
			free(pathdir);
		return(NULL);
	}
	return (NULL);
}


on path return, dont forget to free path;
